@page "/tasks"
@using synctakerWeb.Models
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject TaskService TaskService

<div class="container-fluid">
    <div class="d-flex justify-content-end my-3">
        <button class="btn btn-primary" @onclick="() => AddEditTask(0)">Add Task</button> <!-- 1 is a placeholder taskId -->
    </div>

    <div>
        <ul class="list-group">
            @foreach (var task in tasks)
            {
                <li class="list-group-item" @onclick="() => AddEditTask(task.Id)" style="cursor: pointer;">
                    <div>
                        <h5 class="mb-1"><strong>ID: @task.Id</strong> - @task.Project.ProjectName</h5>
                        <p class="mb-0 text-muted">
                            Assigned To: @(task.AssignedTo?.FirstName ?? "No assigned") | Priority: @task.Priority | Status: @task.Status.Name
                        </p>
                        <small class="text-muted">Planned Date: @task.RealizationPlanned?.ToString("yyyy-MM-dd")</small>
                    </div>
                </li>
            }
        </ul>
    </div>
</div>

@code {
    private List<TaskModel> tasks = new List<TaskModel>();

    protected override async Task OnInitializedAsync()
    {
        tasks = await TaskService.GetTasksAsync();
    }

    private void AddEditTask(int taskId)
    {
        Navigation.NavigateTo($"/tasks/addedit/{taskId}");
    }
}
